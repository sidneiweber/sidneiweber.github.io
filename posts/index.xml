<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - Sidnei Weber</title><link>https://sidneiweber.com.br/posts/</link><description>All Posts | Sidnei Weber</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sidnei.weber@gmail.com (Sidnei Weber)</managingEditor><webMaster>sidnei.weber@gmail.com (Sidnei Weber)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 02 Feb 2023 16:00:00 +0000</lastBuildDate><atom:link href="https://sidneiweber.com.br/posts/" rel="self" type="application/rss+xml"/><item><title>Os quatro sinais de ouro da observabilidade</title><link>https://sidneiweber.com.br/index.pt-br/</link><pubDate>Thu, 02 Feb 2023 16:00:00 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/index.pt-br/</guid><description>Muito além das métricas de CPU e memória podemos ter métricas efetivas e que nos ajudam a entender a saúde do nosso ambiente e resolver problemas de forma mais rápida caso eles ocorram.
Nos primórdios (que não faz tanto tempo assim) as aplicações tinham pouca ou quase nenhuma monitoração. Quando tinham alguma monitoração, tínhamos somente informações básicas de hardware, rede e com alguma sorte quando algum serviço ficava indisponível. Com as mudanças de serviços únicos (monolitos) para centenas ou até milhares de microserviços, ambientes complexos, velozes, na nuvem e com uma visibilidade cada vez mais difícil, foi necessário mudar os padrões de indicadores para algo mais efetivo para quem mais sofre, o usuário/cliente.</description></item><item><title>Simular tráfego de usuário para um servidor</title><link>https://sidneiweber.com.br/simular-trafego-usuario-servidor/</link><pubDate>Wed, 09 Jun 2021 11:00:00 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/simular-trafego-usuario-servidor/</guid><description>Vamos simular o tráfego para um servidor utlizando a ferramenta ab que foi criado pelo Apache para testar seu próprio serviço.
1 ab -c 20 -n 100 -m GET http://127.0.0.1/ Onde: -c Número de solicitações enviadas ao mesmo tempo
-n Número total de solicitações enviadas para o servidor
-m Método HTTP utilizado
Existem diversas outras opções que podem ser encontradas aqui.
Como resposta teremos diversas informações que podem nos ajudar a entender se o servidor está preparado para receber bastante tráfego, se o desempenho seria satisfatório e assim por diante.</description></item><item><title>Reduzindo custos na AWS (EC2) - Parte 1</title><link>https://sidneiweber.com.br/reduzindo-custos-na-aws-ec2-parte-1/</link><pubDate>Tue, 16 Feb 2021 09:27:08 -0300</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/reduzindo-custos-na-aws-ec2-parte-1/</guid><description>A redução de custos no ambiente de nuvem é um assunto constante, a utlização é simples porém o desperdício de recursos pode ocorrer com bastante facilidade. Para te ajudar vou dividir as dicas em três partes, dividindo em EC2, ECS e RDS, três serviços distintos da AWS.
Na primeira parte começaremos com o EC2, que permite a criação de instâncias (&amp;ldquo;máquinas virtuais&amp;rdquo;) com facilidade, podendo ser usado tanto com Windows, quanto com Linux.</description></item><item><title>Criando arquivo de SWAP no Linux</title><link>https://sidneiweber.com.br/criando-araquivo-swap-linux/</link><pubDate>Fri, 29 Jan 2021 22:00:00 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/criando-araquivo-swap-linux/</guid><description>O que é o SWAP SWAP é um espaço no disco que é utilizado quando a quantidade de memória RAM física está cheia. Quando um sistema Linux fica sem RAM, os blocos de memória inativos são movidos da RAM para a área de SWAP.
Instalação Criando arquivo de SWAP
1 sudo dd if=/dev/zero of=/swapfile bs=1024 count=1048576 Com o comando acima iremos criar um arquivo de SWAP com 1 GB de tamanho</description></item><item><title>Kafka tudo o que precisamos saber</title><link>https://sidneiweber.com.br/index.pt-br/</link><pubDate>Tue, 01 Sep 2020 22:20:00 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/index.pt-br/</guid><description>O que é o Kafka Resumidamente o Kafka é usado para trabalhar com fila de mensagens e como uma plataforma de streaming de eventos, usando um modelo de &amp;ldquo;publicar/assinar&amp;rdquo;. Foi criado e disponibilizado pelo Linkedin em 2011. Ele permite que os produtores consigam gravar mensagens no Kafka, que posteriormente podem ser lidas por um ou mais consumidores. Esses registros não podem ser modificados após serem enviados para o Kafka. Ele é executado como um cluster de um ou mais servidores, ou seja, mesmo que só tenhamos um servidor ele mesmo assim é considerado um cluster.</description></item><item><title>Remover imagens Docker com TAG "none"</title><link>https://sidneiweber.com.br/remover-imagens-docker-com-tag/</link><pubDate>Mon, 06 Jul 2020 15:50:35 -0300</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/remover-imagens-docker-com-tag/</guid><description><![CDATA[Primeiro vamos fazer uma pesquisa sobre nossas imagens usando: docker images -a
1 2 3 4 5 6 7 8 9 $ docker images -a sonarqube 0.8 34e889c54fe4 3 weeks ago 536MB &lt;none&gt; &lt;none&gt; 2e0435619f04 3 weeks ago 536MB &lt;none&gt; &lt;none&gt; e08451c98fcb 3 weeks ago 536MB &lt;none&gt; &lt;none&gt; 3cbb4fa1d367 3 weeks ago 510MB &lt;none&gt; &lt;none&gt; 9954766c4404 3 weeks ago 317MB &lt;none&gt; &lt;none&gt; 5471aca149e2 3 weeks ago 317MB &lt;none&gt; &lt;none&gt; de67c74cda48 3 weeks ago 536MB sonarqube 0.]]></description></item><item><title>Como redimensionar volume EBS no Linux sem downtime</title><link>https://sidneiweber.com.br/como-redimensionar-volume-ebs-no-linux-sem-downtime/</link><pubDate>Fri, 13 Mar 2020 21:54:28 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/como-redimensionar-volume-ebs-no-linux-sem-downtime/</guid><description><![CDATA[Esse processo pode ser feito sempre que precisar aumentar o volume sem precisar desligar a instância ou desanexar o volume.
Alterações em produção? Nesse caso sim :)
Após estar logado em sua conta AWS vamos escolher a opção EC2 na lista de serviços Clicamos em &ldquo;Volumes&rdquo; no menu &ldquo;ELASTIC BLOCK STORE&rdquo; Escolha o volume que deseja redimensionar e com o botão direito do mouse clique em &ldquo;Modify Volume&rdquo; Verá uma janela como essa: Defina o novo tamanho para o volume, como no exemplo da imagem estamos estendendo o volume para 20GB Confirme no botão &ldquo;Modify&rdquo; Agora precisaremos extender a partição no sistema.]]></description></item><item><title>Ansible: Criado AMI Windows personalizada na AWS (Parte 2)</title><link>https://sidneiweber.com.br/ansible-criado-ami-windows-personalizada-na-aws-parte-2/</link><pubDate>Fri, 27 Dec 2019 17:04:43 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/ansible-criado-ami-windows-personalizada-na-aws-parte-2/</guid><description>Na parte 1 aprendemos como usar um script AWS User Data para configurar uma senha de Administrador e configurar o WinRM no Windows. Agora que sabemos como criar uma instância setando um senha especifica, vamos ao restante dos procedimentos. Vamos estruturar nosso projeto e manter as coisas organizadas.
Recursos utilizados, caso não tenha algo instalado, não funcionará :
Python 3.8.0
Módulos pip:
boto
boto3
pywinrm Ansible 2.9.2
Já podemos supor que você tenha o Ansible configurado corretamente para sua conta da AWS (por exemplo, boto instalado, credenciais do IAM configuradas).</description></item><item><title>Ansible: Criado AMI Windows personalizada na AWS (Parte 1)</title><link>https://sidneiweber.com.br/ansible-criado-ami-windows-personalizada-na-aws-parte-1/</link><pubDate>Wed, 27 Nov 2019 09:13:21 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/ansible-criado-ami-windows-personalizada-na-aws-parte-1/</guid><description>Quando vamos trabalhar com Ansbile usando Windows na AWS notamos que as imagens padrões do Windows não estão com o WinRM configurado e as senhas são geradas aleatoriamente usando a chave selecionada, sendo somente acessíveis alguns minutos após a instância iniciar. Conectando em uma instância Windows.
Uma alternativa é criar uma AMI personalizada com WinRM configurado e uma senha pré-definida, estando assim disponível imediatamente para uso. O primeiro passo é iniciar uma instância Windows colocando o script abaixo em User Data.</description></item><item><title>Exemplo de comandos da AWS S3 para gerenciar buckets</title><link>https://sidneiweber.com.br/exemplo-de-comandos-do-aws-s3-para-gerenciar-buckets/</link><pubDate>Fri, 25 Oct 2019 16:55:50 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/exemplo-de-comandos-do-aws-s3-para-gerenciar-buckets/</guid><description>Este tutorial explica os conceitos básicos de como gerenciar buckets do S3 e seus objetos usando o aws s3 cli usando os seguintes exemplos:
Criar bucket 1 2 3 4 aws s3 mb s3://bucketname # região diferente aws s3 mb s3://bucketname --region us-east-2 Remover Bucket 1 2 aws s3 rb s3://bucketname aws s3 rb s3://bucketname --force Opção ls 1 2 3 4 aws s3 ls aws s3 ls s3://bucketname aws s3 ls s3://bucketname --recursive aws s3 ls s3://bucketname --recursive --human-readable --summarize Opção cp 1 2 3 4 5 6 aws s3 cp getdata.</description></item></channel></rss>