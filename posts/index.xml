<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Posts - Sidnei Weber</title><link>https://sidneiweber.com.br/posts/</link><description>Posts | Sidnei Weber</description><generator>Hugo -- gohugo.io</generator><language>pt-br</language><managingEditor>sidnei.weber@gmail.com (Sidnei Weber)</managingEditor><webMaster>sidnei.weber@gmail.com (Sidnei Weber)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 07 Mar 2024 12:20:00 +0000</lastBuildDate><atom:link href="https://sidneiweber.com.br/posts/" rel="self" type="application/rss+xml"/><item><title>Criando uma API REST em Python com Flask</title><link>https://sidneiweber.com.br/criando-api-rest-em-python-com-flask/</link><pubDate>Thu, 07 Mar 2024 12:20:00 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/criando-api-rest-em-python-com-flask/</guid><description>O que é uma API REST Uma API REST (Representational State Transfer ou Transferência de Estado Representacional) é um tipo de arquitetura para a construção serviços. Essa abordagem permite a comunicação entre os sistemas usando os protocolos padrão da web, como HTTP.
REST API Principais características de uma API REST:
Arquitetura cliente-servidor: A comunicação ocorre entre um cliente (como um navegador web ou um aplicativo móvel) e um servidor, seguindo o modelo de requisição e resposta.</description></item><item><title>Um pouco sobre SLA, SLI e SLO</title><link>https://sidneiweber.com.br/um-pouco-sobre-sla-sli-slo/</link><pubDate>Fri, 23 Feb 2024 12:20:00 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/um-pouco-sobre-sla-sli-slo/</guid><description>Introdução Algumas métricas são importantes para entender como nossos serviços estão performando mas também existem métricas que nos dão uma visão sobre a confiabilidade e disponibilidade desses serviços. Entre elas estão o SLI e SLO, que vamos entender um pouco mais nesse texto.
Primeiramente é necessário entender que são métricas e dados importantes para medir a confiabilidade dos serviços através da observabilidade, um dos principais pilares de SRE (Site Reliability Engineering).</description></item><item><title>Como criar um cluster kubernetes EKS na AWS com eksctl</title><link>https://sidneiweber.com.br/como-criar-cluster-kubernetes-eks-na-aws-com-eksctl/</link><pubDate>Wed, 07 Feb 2024 12:20:00 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/como-criar-cluster-kubernetes-eks-na-aws-com-eksctl/</guid><description>Introdução Após o último post sobre Kubernetes criando um cluster localmente, continuaremos a saga, mas agora criando um cluster Kubernetes na AWS, em um cenário um pouco mais próxima da realidade. Para criar um cluster kubernetes na AWS utilizaremos uma ferramenta chamada eksctl.
eksctl é uma ferramenta CLI simples para criar e gerenciar clusters no EKS – serviço Kubernetes gerenciado da Amazon para EC2. Está escrito em Go, usa CloudFormation, foi criado pela Weaveworks e aceita contribuições da comunidade.</description></item><item><title>3 maneiras de iniciar um cluster Kubernetes localmente</title><link>https://sidneiweber.com.br/3-maneiras-iniciar-cluster-kubernetes-localmente/</link><pubDate>Thu, 18 Jan 2024 12:20:00 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/3-maneiras-iniciar-cluster-kubernetes-localmente/</guid><description>&amp;#x2693; Introdução O Kubernetes se tornou uma das plataformas de orquestração de containers mais utilizada no mundo. Existem diversos fatores positivos e negativos no uso do Kubernetes no processo de desenvolvimento, implantação e gerenciamento de aplicações.
Kubernetes oferece uma orquestração avançada, permitindo que as aplicações cresçam conforme a demanda. Ele permite também abstrair a infraestrutura, ou seja, se a aplicação roda em um cluster Kubernetes, muito provavelmente roda em qualquer outro cluster de mesma versão.</description></item><item><title>Instalação servidor Kafka no Ubuntu Server</title><link>https://sidneiweber.com.br/instalacao-servidor-kafka-ubuntu/</link><pubDate>Wed, 10 Jan 2024 10:20:00 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/instalacao-servidor-kafka-ubuntu/</guid><description>O que é o Kafka Resumidamente o Kafka é usado para trabalhar com fila de mensagens e como uma plataforma de streaming de eventos, usando um modelo de &amp;ldquo;publicar/assinar&amp;rdquo;. Foi criado e disponibilizado pelo Linkedin em 2011. Ele permite que os produtores consigam gravar mensagens no Kafka, que posteriormente podem ser lidas por um ou mais consumidores. Esses registros não podem ser modificados após serem enviados para o Kafka. Ele é executado como um cluster de um ou mais servidores, ou seja, mesmo que só tenhamos um servidor ele mesmo assim é considerado um cluster.</description></item><item><title>Tarefas para um engenheiro DevOps fazer quando não tiver o que fazer</title><link>https://sidneiweber.com.br/tarefas-engenheiro-devops-quando-nao-tem-fazer/</link><pubDate>Mon, 27 Nov 2023 09:00:00 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/tarefas-engenheiro-devops-quando-nao-tem-fazer/</guid><description>Documentar Possivelmente nem todo mundo gosta de escrever documentação, mas é algo muito necessário. Aproveitar o tempo &amp;ldquo;livre&amp;rdquo; para documentar o que está fazendo ou já fez, pode trazer diversos benefícios. Durante o processo de documentação, você também estará revisando e ajudando a fixar o que fez. Pode encontrar algum ponto de melhoria no projeto, por que não, nem tudo é perfeito.
Sua equipe também pode se beneficiar disso, tendo materiais de consulta sempre que necessário, diminuindo as interrupções por perguntas básicas sobre algum projeto.</description></item><item><title>Os vingadores DevOps</title><link>https://sidneiweber.com.br/os-vingadores-devops/</link><pubDate>Thu, 10 Aug 2023 21:00:00 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/os-vingadores-devops/</guid><description>Aviso do autor Essa história pode ter sido baseada em fatos reais (ou não) e pode contar ironia (ou não). Guerra Infinita da Tecnologia: Capítulo 1 Em uma metrópole futurista chamada Techropolis, onde inovação e tecnologia eram a essência da vida, dois indivíduos com um poder sobrenatural surgiram. Alex, o Prodigy Códigus, era um jovem gênio da programação, capaz de criar códigos complexos com um piscar de olhos. Em outro canto da cidade, Diana, a Executora Operativa, era uma mestra em infraestrutura e operações, mantendo os sistemas em funcionamento com sua habilidade sem igual.</description></item><item><title>Os quatro sinais de ouro da observabilidade</title><link>https://sidneiweber.com.br/os-quatro-sinais-ouro-observabilidade/</link><pubDate>Thu, 02 Feb 2023 16:00:00 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/os-quatro-sinais-ouro-observabilidade/</guid><description>Muito além das métricas de CPU e memória podemos ter métricas efetivas e que nos ajudam a entender a saúde do nosso ambiente e resolver problemas de forma mais rápida caso eles ocorram.
Nos primórdios (que não faz tanto tempo assim) as aplicações tinham pouca ou quase nenhuma monitoração. Quando tinham alguma monitoração, tínhamos somente informações básicas de hardware, rede e com alguma sorte quando algum serviço ficava indisponível. Com as mudanças de serviços únicos (monolitos) para centenas ou até milhares de microserviços, ambientes complexos, velozes, na nuvem e com uma visibilidade cada vez mais difícil, foi necessário mudar os padrões de indicadores para algo mais efetivo para quem mais sofre, o usuário/cliente.</description></item><item><title>Simular tráfego de usuário para um servidor</title><link>https://sidneiweber.com.br/simular-trafego-usuario-servidor/</link><pubDate>Wed, 09 Jun 2021 11:00:00 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/simular-trafego-usuario-servidor/</guid><description>Vamos simular o tráfego para um servidor utlizando a ferramenta ab que foi criado pelo Apache para testar seu próprio serviço.
1 ab -c 20 -n 100 -m GET http://127.0.0.1/ Onde: -c Número de solicitações enviadas ao mesmo tempo
-n Número total de solicitações enviadas para o servidor
-m Método HTTP utilizado
Existem diversas outras opções que podem ser encontradas aqui.
Como resposta teremos diversas informações que podem nos ajudar a entender se o servidor está preparado para receber bastante tráfego, se o desempenho seria satisfatório e assim por diante.</description></item><item><title>Reduzindo custos na AWS (EC2) - Parte 1</title><link>https://sidneiweber.com.br/reduzindo-custos-na-aws-ec2-parte-1/</link><pubDate>Tue, 16 Feb 2021 09:27:08 -0300</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/reduzindo-custos-na-aws-ec2-parte-1/</guid><description>A redução de custos no ambiente de nuvem é um assunto constante, a utlização é simples porém o desperdício de recursos pode ocorrer com bastante facilidade. Para te ajudar vou dividir as dicas em três partes, dividindo em EC2, ECS e RDS, três serviços distintos da AWS.
Na primeira parte começaremos com o EC2, que permite a criação de instâncias (&amp;ldquo;máquinas virtuais&amp;rdquo;) com facilidade, podendo ser usado tanto com Windows, quanto com Linux.</description></item></channel></rss>