<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>aws - Tag - Sidnei Weber</title><link>https://sidneiweber.com.br/tags/aws/</link><description>aws - Tag - Sidnei Weber</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sidnei.weber@gmail.com (Sidnei Weber)</managingEditor><webMaster>sidnei.weber@gmail.com (Sidnei Weber)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 16 Feb 2021 09:27:08 -0300</lastBuildDate><atom:link href="https://sidneiweber.com.br/tags/aws/" rel="self" type="application/rss+xml"/><item><title>Reduzindo custos na AWS (EC2) - Parte 1</title><link>https://sidneiweber.com.br/reduzindo-custos-na-aws-ec2-parte-1/</link><pubDate>Tue, 16 Feb 2021 09:27:08 -0300</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/reduzindo-custos-na-aws-ec2-parte-1/</guid><description>A redução de custos no ambiente de nuvem é um assunto constante, a utlização é simples porém o desperdício de recursos pode ocorrer com bastante facilidade. Para te ajudar vou dividir as dicas em três partes, dividindo em EC2, ECS e RDS, três serviços distintos da AWS.
Na primeira parte começaremos com o EC2, que permite a criação de instâncias (&amp;ldquo;máquinas virtuais&amp;rdquo;) com facilidade, podendo ser usado tanto com Windows, quanto com Linux.</description></item><item><title>Como redimensionar volume EBS no Linux sem downtime</title><link>https://sidneiweber.com.br/como-redimensionar-volume-ebs-no-linux-sem-downtime/</link><pubDate>Fri, 13 Mar 2020 21:54:28 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/como-redimensionar-volume-ebs-no-linux-sem-downtime/</guid><description><![CDATA[Esse processo pode ser feito sempre que precisar aumentar o volume sem precisar desligar a instância ou desanexar o volume.
Alterações em produção? Nesse caso sim :)
Após estar logado em sua conta AWS vamos escolher a opção EC2 na lista de serviços Clicamos em &ldquo;Volumes&rdquo; no menu &ldquo;ELASTIC BLOCK STORE&rdquo; Escolha o volume que deseja redimensionar e com o botão direito do mouse clique em &ldquo;Modify Volume&rdquo; Verá uma janela como essa: Defina o novo tamanho para o volume, como no exemplo da imagem estamos estendendo o volume para 20GB Confirme no botão &ldquo;Modify&rdquo; Agora precisaremos extender a partição no sistema.]]></description></item><item><title>Ansible: Criado AMI Windows personalizada na AWS (Parte 2)</title><link>https://sidneiweber.com.br/ansible-criado-ami-windows-personalizada-na-aws-parte-2/</link><pubDate>Fri, 27 Dec 2019 17:04:43 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/ansible-criado-ami-windows-personalizada-na-aws-parte-2/</guid><description>Na parte 1 aprendemos como usar um script AWS User Data para configurar uma senha de Administrador e configurar o WinRM no Windows. Agora que sabemos como criar uma instância setando um senha especifica, vamos ao restante dos procedimentos. Vamos estruturar nosso projeto e manter as coisas organizadas.
Recursos utilizados, caso não tenha algo instalado, não funcionará :
Python 3.8.0
Módulos pip:
boto
boto3
pywinrm Ansible 2.9.2
Já podemos supor que você tenha o Ansible configurado corretamente para sua conta da AWS (por exemplo, boto instalado, credenciais do IAM configuradas).</description></item><item><title>Ansible: Criado AMI Windows personalizada na AWS (Parte 1)</title><link>https://sidneiweber.com.br/ansible-criado-ami-windows-personalizada-na-aws-parte-1/</link><pubDate>Wed, 27 Nov 2019 09:13:21 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/ansible-criado-ami-windows-personalizada-na-aws-parte-1/</guid><description>Quando vamos trabalhar com Ansbile usando Windows na AWS notamos que as imagens padrões do Windows não estão com o WinRM configurado e as senhas são geradas aleatoriamente usando a chave selecionada, sendo somente acessíveis alguns minutos após a instância iniciar. Conectando em uma instância Windows.
Uma alternativa é criar uma AMI personalizada com WinRM configurado e uma senha pré-definida, estando assim disponível imediatamente para uso. O primeiro passo é iniciar uma instância Windows colocando o script abaixo em User Data.</description></item><item><title>Exemplo de comandos da AWS S3 para gerenciar buckets</title><link>https://sidneiweber.com.br/exemplo-de-comandos-do-aws-s3-para-gerenciar-buckets/</link><pubDate>Fri, 25 Oct 2019 16:55:50 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/exemplo-de-comandos-do-aws-s3-para-gerenciar-buckets/</guid><description>Este tutorial explica os conceitos básicos de como gerenciar buckets do S3 e seus objetos usando o aws s3 cli usando os seguintes exemplos:
Criar bucket 1 2 3 4 aws s3 mb s3://bucketname # região diferente aws s3 mb s3://bucketname --region us-east-2 Remover Bucket 1 2 aws s3 rb s3://bucketname aws s3 rb s3://bucketname --force Opção ls 1 2 3 4 aws s3 ls aws s3 ls s3://bucketname aws s3 ls s3://bucketname --recursive aws s3 ls s3://bucketname --recursive --human-readable --summarize Opção cp 1 2 3 4 5 6 aws s3 cp getdata.</description></item></channel></rss>