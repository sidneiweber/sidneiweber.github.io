<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>shell script on Sidnei Weber</title>
    <link>https://sidneiweber.com.br/tags/shell-script/</link>
    <description>Recent content in shell script on Sidnei Weber</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 06 Nov 2018 10:03:27 -0300</lastBuildDate><atom:link href="https://sidneiweber.com.br/tags/shell-script/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Convertendo arquivos DOS ^M com Vim</title>
      <link>https://sidneiweber.com.br/convertendo-arquivos-dos-m-com-vim/</link>
      <pubDate>Tue, 06 Nov 2018 10:03:27 -0300</pubDate>
      
      <guid>https://sidneiweber.com.br/convertendo-arquivos-dos-m-com-vim/</guid>
      <description>Quem nunca passou pela situação de executar um script e o mesmo apresentar erro. Normal, mas algumas vezes o erro ocorre pela formatação, principalmente se foi escrito ou salvo em um Windows. Ocorre de no final de cada linha ele acrescentar um ^M, o que não o Linux não consegue interpretar.
Existem algumas formas de corrigir esse problema, a mais conhecida é usando o aplicativo dos2unix
Mas o quero apresentar hoje é usando o poderoso Vim.</description>
    </item>
    
    <item>
      <title>Dica rápida - Verificar pastas que ocupam mais espaço</title>
      <link>https://sidneiweber.com.br/dica-r%C3%A1pida-verificar-pastas-que-ocupam-mais-espa%C3%A7o/</link>
      <pubDate>Thu, 17 Aug 2017 13:15:51 -0300</pubDate>
      
      <guid>https://sidneiweber.com.br/dica-r%C3%A1pida-verificar-pastas-que-ocupam-mais-espa%C3%A7o/</guid>
      <description>Bom essa dica é bem simples mas muito útil, vamos usar uma combinação de comandos para listar as 5 pastas que mais utilizam espaço no diretório corrente. O bom comando seria esse:
du -Sh | sort -rh | head -5 Saida: 2,1G	./log/journal/457f9ec73a36473ab3a70f2a1ebce863 196M	./lib/mysql 189M	./lib/docker/aufs/diff/105ad3b8329fb9264b17543f7d70746b1c330f18523f27cdee5ad3fdff966697/usr/bin 116M	./lib/nvidia 111M	./lib/docker/aufs/diff/105ad3b8329fb9264b17543f7d70746b1c330f18523f27cdee5ad3fdff966697/usr/share/cattle/0e44936b6b56ae4372799b0f48e6e934/WEB-INF/lib Explicando: O comando du faz a verificação do uso das pastas em si;
O comando sort faz a ordenação do maior pro menor;</description>
    </item>
    
    <item>
      <title>Usando o bashrc como uma ferramenta de trabalho</title>
      <link>https://sidneiweber.com.br/usando-o-bashrc-como-uma-ferramenta-de-trabalho/</link>
      <pubDate>Fri, 16 Dec 2016 15:45:29 -0300</pubDate>
      
      <guid>https://sidneiweber.com.br/usando-o-bashrc-como-uma-ferramenta-de-trabalho/</guid>
      <description>Segue o meu .bashrc com vários atalhos e alterações.
# Cor Verde (Usuario comum) PS1=&amp;#39;${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ &amp;#39; # Cor Vermelha (root) #PS1=&amp;#39;${debian_chroot:+($debian_chroot)}\[\033[1;31m\]\u@\h\[\033[00m\]:\[\033[1;34m\]\w\[\033[00m\]\$ &amp;#39; # Completion if [ -f /etc/bash_completion ]; then . /etc/bash_completion fi # Configurações Historico export HISTIGNORE=&amp;#34;&amp;amp;:ls:[bf]g:exit:reset:clear:cd*&amp;#34; export HISTSIZE=4096 export HISTCONTROL=&amp;#34;ignoreboth:erasedups&amp;#34; shopt -s histreedit; # Mans coloridas export MANPAGER=&amp;#34;/usr/bin/most -s&amp;#34; # Alias alias update=&amp;#39;pacman -Syu&amp;#39; alias ls=&amp;#39;ls --color=auto&amp;#39; alias grep=&amp;#39;grep --color=auto&amp;#39; alias fgrep=&amp;#39;fgrep --color=auto&amp;#39; alias egrep=&amp;#39;egrep --color=auto&amp;#39; # Extração de arquivos # Uso: extrair &amp;lt; arquivo &amp;gt;  extrair() { if [ -f $1 ] ; then case $1 in *.</description>
    </item>
    
    <item>
      <title>[Shell Script] Procurar texto em vários arquivos</title>
      <link>https://sidneiweber.com.br/shell-script-procurar-texto-em-v%C3%A1rios-arquivos/</link>
      <pubDate>Mon, 06 Jul 2015 15:51:01 -0300</pubDate>
      
      <guid>https://sidneiweber.com.br/shell-script-procurar-texto-em-v%C3%A1rios-arquivos/</guid>
      <description>find . | xargs grep &amp;#39;texto a pesquisar&amp;#39; </description>
    </item>
    
    <item>
      <title>Evitando encerramento acidental de sessões bash</title>
      <link>https://sidneiweber.com.br/evitando-encerramento-acidental-de-sess%C3%B5es-bash/</link>
      <pubDate>Mon, 06 Jul 2015 15:50:35 -0300</pubDate>
      
      <guid>https://sidneiweber.com.br/evitando-encerramento-acidental-de-sess%C3%B5es-bash/</guid>
      <description>A sequência de teclas &amp;ldquo;CTRL+D&amp;rdquo; encerra uma sessão bash. Às vezes digitamos estas teclas por acidente e encerramos uma sessão acidentalmente.
Para evitar que isto ocorra, definimos a variável de ambiente IGNOREEOF:
export IGNOREEOF=1 Desta forma, para encerrar uma sessão bash, precisamos digitar a sequência CTRL+D duas vezes ou então digitar exit.
Esta variável de ambiente deve ser definida no arquivo .bashrc.
Fonte: Dicas-L</description>
    </item>
    
    <item>
      <title>Colocando uma firula no terminal</title>
      <link>https://sidneiweber.com.br/colocando-uma-firula-no-terminal/</link>
      <pubDate>Mon, 06 Jul 2015 15:48:53 -0300</pubDate>
      
      <guid>https://sidneiweber.com.br/colocando-uma-firula-no-terminal/</guid>
      <description>Editar o arquivo .bashrc e adicionar a linha a seguir
#PS1=&amp;#39;[u@h W]$ &amp;#39; PS1=&amp;#39;┌─[u@h W][e[0;32m][${cwd}t][&amp;lt;wbr /&amp;gt;033[0m] ${fill}n[\033[0m]└─■ &amp;#39; </description>
    </item>
    
    <item>
      <title>Alerta de espaço em disco via e-mail</title>
      <link>https://sidneiweber.com.br/alerta-de-espa%C3%A7o-em-disco-via-e-mail/</link>
      <pubDate>Mon, 06 Jul 2015 15:39:40 -0300</pubDate>
      
      <guid>https://sidneiweber.com.br/alerta-de-espa%C3%A7o-em-disco-via-e-mail/</guid>
      <description>Script para enviar e-mail quando o uso de disco chegar a 90% de uso
df -k | grep -e &amp;#39;lv&amp;#39; | awk &amp;#39;{ print $4 &amp;#34; &amp;#34; $7 }&amp;#39; | while read output; do echo $output usep=$(echo $output | awk &amp;#39;{ print $1}&amp;#39; | cut -d&amp;#39;%&amp;#39; -f1 ) partition=$(echo $output | awk &amp;#39;{ print $2 }&amp;#39; ) if [ $usep -ge 90 ]; then echo &amp;#34;Verifique o diretorio &amp;#34;$partition&amp;#34; com ($usep%) de uso no servidor $(hostname)&amp;#34; | mail -s &amp;#34;Alerta!</description>
    </item>
    
    <item>
      <title>Atalhos úteis para a linha de comando</title>
      <link>https://sidneiweber.com.br/atalhos-%C3%BAteis-para-a-linha-de-comando/</link>
      <pubDate>Mon, 06 Jul 2015 15:38:45 -0300</pubDate>
      
      <guid>https://sidneiweber.com.br/atalhos-%C3%BAteis-para-a-linha-de-comando/</guid>
      <description>Atalho Ação     Ctrl+A move o cursor para o começo da linha   Ctrl+E move o cursor para o fim da linha   Alt+F move o cursor para o fim da próxima palavra   Alt+B move o cursor para o começo da palavra anterior   Ctrl+T troca os dois últimos caracteres de posição, por exemplos “sl” se torna “ls”   Alt+T troca as duas últimas palavras de posição, por exemplo “list cat” se torna “cat list”   Ctrl+U corta o texto do começo da linha até o começo da palavra antes do cursor   Ctrl+W corta apenas a palavra antes do cursor   Ctrl+K cut the text of the current command after the cursor.</description>
    </item>
    
    <item>
      <title>Desligar ou reiniciar o computador com hora marcada</title>
      <link>https://sidneiweber.com.br/desligar-ou-reiniciar-o-computador-com-hora-marcada/</link>
      <pubDate>Tue, 23 Apr 2013 12:02:44 -0300</pubDate>
      
      <guid>https://sidneiweber.com.br/desligar-ou-reiniciar-o-computador-com-hora-marcada/</guid>
      <description>Para programar o computador para desligar em um certo horário, basta como root usar o seguinte comando:
shutdown -h hh:mm Sendo que hh são as horas no formato de 24 horas e mm são os minutos.
Outra maneira para programar o desligamento do seu pc é usar o seguinte comando:
shutdown -h +m Sendo que m é o número de minutos que você deseja até o computador desligar.
Ex:
shutdown -h +300 Significa que o computador desligará daqui a 300 minutos.</description>
    </item>
    
  </channel>
</rss>
