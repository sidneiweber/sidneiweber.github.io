<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Ingress - Tag - Sidnei Weber</title><link>https://sidneiweber.com.br/tags/ingress/</link><description>Ingress - Tag - Sidnei Weber</description><generator>Hugo -- gohugo.io</generator><language>pt-br</language><managingEditor>sidnei.weber@gmail.com (Sidnei Weber)</managingEditor><webMaster>sidnei.weber@gmail.com (Sidnei Weber)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 22 Mar 2024 10:20:00 +0000</lastBuildDate><atom:link href="https://sidneiweber.com.br/tags/ingress/" rel="self" type="application/rss+xml"/><item><title>Como utilizar o Traefik como ingress controller no Kubernetes</title><link>https://sidneiweber.com.br/como-utilizar-traefik-ingress-controller-no-kubernetes/</link><pubDate>Fri, 22 Mar 2024 10:20:00 +0000</pubDate><author>Sidnei Weber</author><guid>https://sidneiweber.com.br/como-utilizar-traefik-ingress-controller-no-kubernetes/</guid><description>O que é Traefik Traefik (pronuncia-se “traffic”) é um proxy reverso e balanceador de carga para microsserviços de código aberto. Traefik pode nos ajudar a subir serviços mais rapidamente sem barrar no excesso de configurações de infra e simplificar o ambiente. Ele é escrito em go e é super leve e rápido, como exemplo a imagem docker possui 43MB imagem-latest.
Alguns recursos úteis que o Traefik nos disponibiliza:
Auto Discovery Metrics SSL Dashboard Circuit breakers (LatencyAtQuantileMS, NetworkErrorRatio, ResponseCodeRatio) Rate Limit Retry (Enable retry sending request if network error) Sticky sessions Health Check Canary deployments (Kubernetes) Mirroring (Kubernetes) Traefik Instalando Traefik Pré-requisitos Precisamos obviamente de um cluster Kubernetes, para nosso exemplo utilizaremos um cluster EKS na AWS, se você não sabe como criar um cluster na AWS pode dar uma olhada nesse artigo que escrevi.</description></item></channel></rss>